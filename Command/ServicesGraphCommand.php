<?phpnamespace Kizilare\ServicesDebug\Command;use Kizilare\ServicesDebug\Helper\ConfigurationHelper;use Symfony\Bundle\FrameworkBundle\Command\ContainerAwareCommand;use Symfony\Component\Console\Input\InputArgument;use Symfony\Component\Console\Input\InputInterface;use Symfony\Component\Console\Output\OutputInterface;class ServicesGraphCommand extends ContainerAwareCommand{    /**     * {@inheritdoc}     */    protected function configure()    {        $this            ->setName('kizilare:services:graph')            ->addArgument('config', InputArgument::REQUIRED, 'Configuration file to use')            ->addArgument('dependencies', InputArgument::REQUIRED, 'Dependencies file to use')            ->setDescription('Services and classes dependencies path');    }    /**     * {@inheritdoc}     */    protected function execute(InputInterface $input, OutputInterface $output)    {        $configurationFile = $input->getArgument('config');        $configuration = new ConfigurationHelper($configurationFile);        $dependenciesHolder = $this->getContainer()->get('kizilare.dependency_holder');        $dependenciesHolder->load($input->getArgument('dependencies'));        $output->writeln('Processing dependencies');        $this->getContainer()->get('kizilare.dependencies_processor')->build($configuration, $dependenciesHolder);        $output->writeln('Building graph Source');        $this->getContainer()->get('kizilare.graph_processor')->build($configuration, $dependenciesHolder);    }}