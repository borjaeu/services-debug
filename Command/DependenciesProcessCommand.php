<?phpnamespace Kizilare\ServicesDebug\Command;use Kizilare\ServicesDebug\Helper\ConfigurationHelper;use Kizilare\ServicesDebug\Helper\DependenciesHolderHelper;use Kizilare\ServicesDebug\Processor\SourceProcessor;use Kizilare\ServicesDebug\Processor\VendorProcessor;use Symfony\Bundle\FrameworkBundle\Command\ContainerAwareCommand;use Symfony\Component\Console\Command\Command;use Symfony\Component\Console\Input\InputArgument;use Symfony\Component\Console\Input\InputInterface;use Symfony\Component\Console\Logger\ConsoleLogger;use Symfony\Component\Console\Output\OutputInterface;class DependenciesProcessCommand extends Command{    /**     * {@inheritdoc}     */    protected function configure()    {        $this            ->setName('dependencies:process')            ->addArgument('config', InputArgument::REQUIRED, 'Configuration file to use')            ->setDescription('Build dependencies definition file');    }    /**     * {@inheritdoc}     */    protected function execute(InputInterface $input, OutputInterface $output)    {        $logger = new ConsoleLogger($output);        $configurationFile = $input->getArgument('config');        $configuration = new ConfigurationHelper($configurationFile);        $dependenciesHolder = new DependenciesHolderHelper($configuration, $logger);        $vendorProcessor = new VendorProcessor($configuration, $dependenciesHolder, $logger);        $sourceProcessor = new SourceProcessor($configuration, $dependenciesHolder, $logger);        $output->writeln('Debugging Vendors');        $vendorProcessor->loadVendors();        $output->writeln('Debugging Source');        $sourceProcessor->loadImports();        $dependenciesHolder->writeDebug();    }}