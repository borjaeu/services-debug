<?phpnamespace Kizilare\ServicesDebug\Command;use Kizilare\ServicesDebug\Helper\ConfigurationHelper;use Symfony\Bundle\FrameworkBundle\Command\ContainerAwareCommand;use Symfony\Component\Console\Input\InputArgument;use Symfony\Component\Console\Input\InputInterface;use Symfony\Component\Console\Output\OutputInterface;class ServicesProcessCommand extends ContainerAwareCommand{    /**     * {@inheritdoc}     */    protected function configure()    {        $this            ->setName('kizilare:services:process')            ->addArgument('config', InputArgument::REQUIRED, 'Configuration file to use')            ->setDescription('Services and classes dependencies path');    }    /**     * {@inheritdoc}     */    protected function execute(InputInterface $input, OutputInterface $output)    {        $configurationFile = $input->getArgument('config');        $configuration = new ConfigurationHelper($configurationFile);        $dependenciesHolder = $this->getContainer()->get('kizilare.dependency_holder');        $dependenciesHolder->setConfiguration($configuration);        $output->writeln('Debugging Vendors');        $this->getContainer()->get('kizilare.vendor_processor')->processSource($configuration, $dependenciesHolder);        $output->writeln('Debugging Source');        $this->getContainer()->get('kizilare.source_processor')->processSource($configuration, $dependenciesHolder);        $dependenciesHolder->writeDebug();    }}